---
- name: ensure Wolf workind directory exists
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/wolf"
    state: directory
    mode: '0755'

- name: Copy NVIDIA driver volume script
  copy:
    src: docker-nvidia-volume.sh
    dest: "{{ ansible_user_dir }}/wolf/docker-nvidia-volume.sh"
    mode: '0755'

- name: Get NVIDIA driver version
  ansible.builtin.slurp:
    src: /sys/module/nvidia/version
  register: nvidia_driver_version_file

- name: Set NVIDIA driver vars
  set_fact: 
    nvidia_driver_version: "{{ nvidia_driver_version }}"
    nvidia_driver_volume_name: "nvidia-driver-vol-{{ nvidia_driver_version }}"
  vars:
    nvidia_driver_version: "{{ nvidia_driver_version_file.content | b64decode | trim }}"

- name: Show NVIDIA driver version
  ansible.builtin.debug:
    msg: "NVIDIA driver version: {{ nvidia_driver_version }}"

- name: Ensure NVIDIA driver volume exists
  command: 
    cmd: "{{ ansible_user_dir }}/wolf/docker-nvidia-volume.sh"

- name: Ensure nvidia-drm.modeset in GRUB config 
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    # First () is a capturing group to keep existing values
    # '(?:(?!nvidia-drm.modeset=1).)' will not match if stting already set
    # Existing setting are kept to ensure nothing breaks
    regexp: '^GRUB_CMDLINE_LINUX_DEFAULT="((?:(?!nvidia-drm\.modeset=1).)*?)"$'
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="\1 nvidia-drm.modeset=1"'
    backup: true
    backrefs: true
  notify: Update GRUB and reboot

- name: Copy docker-compose file
  template:
    src: docker-compose.nvidia.yml
    dest: "{{ ansible_user_dir }}/wolf/docker-compose.nvidia.yml"

- name: Run docker compose stack
  community.docker.docker_compose_v2:
    project_src: "{{ ansible_user_dir }}/wolf"
    files: docker-compose.nvidia.yml