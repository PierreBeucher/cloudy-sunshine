---
- name: unload nouveau
  modprobe:
    name: nouveau
    state: absent
  ignore_errors: true

- name: ubuntu install tasks (canonical repos)
  include_tasks: install-ubuntu.yml
  when: ansible_distribution == 'Ubuntu' and (not nvidia_driver_ubuntu_install_from_cuda_repo)

- name: ubuntu install tasks (CUDA repo)
  include_tasks: install-ubuntu-cuda-repo.yml
  when: ansible_distribution == 'Ubuntu' and nvidia_driver_ubuntu_install_from_cuda_repo

- name: redhat family install tasks
  include_tasks: install-redhat.yml
  when: ansible_os_family == 'RedHat'

- name: create persistenced override dir
  file:
    path: /etc/systemd/system/nvidia-persistenced.service.d/
    state: directory
    recurse: yes

- name: configure persistenced service to turn on persistence mode
  copy:
    src: nvidia-persistenced-override.conf
    dest: /etc/systemd/system/nvidia-persistenced.service.d/override.conf
  when: nvidia_driver_persistence_mode_on

- name: remove persistenced service override
  file:
    path: /etc/systemd/system/nvidia-persistenced.service.d/override.conf
    state: absent
  when: not nvidia_driver_persistence_mode_on

- name: enable persistenced
  systemd:
    name: nvidia-persistenced
    enabled: yes
  when: nvidia_driver_package_state != 'absent'

- name: set module parameters
  template:
    src: nvidia.conf.j2
    dest: "{{ nvidia_driver_module_file }}"
    mode: '0644'

# Setup a service running in userspace to ensure /dev/nvidia-caps/* devices are present on boot
# See https://docs.nvidia.com/datacenter/tesla/mig-user-guide/index.html#device-nodes-devfs
- name: Ensure nvidia-caps startup script exists
  register: nvidia_caps_script
  copy:
    dest: /usr/local/bin/nvidia-setup-caps.sh
    mode: '0755'
    content: |
      #!/usr/bin/env bash
      #
      # Ensure /dev/nvidia-caps/* devices are present
      # Used by nvidia-setup-caps service to ensure MIG devices are present on boot
      # See https://docs.nvidia.com/datacenter/tesla/mig-user-guide/index.html#device-nodes-devfs
      echo "Running nvidia-modprobe to ensure /dev/nvidia-caps/* existence"
      nvidia-modprobe -f /proc/driver/nvidia/capabilities/mig/config -f /proc/driver/nvidia/capabilities/mig/monitor

- name: Run nvidia-caps startup script after change
  when: nvidia_caps_script.changed
  ansible.builtin.command: /usr/local/bin/nvidia-setup-caps.sh

- name: Ensure nvidia-caps systemd script exists
  register: nvidia_caps_systemd_unit
  copy:
    dest: /etc/systemd/system/nvidia-setup-caps.service
    content: |
      [Unit]
      Description=Setup NVIDIA capabilities

      [Service]
      ExecStart=/usr/local/bin/nvidia-setup-caps.sh

      [Install]
      WantedBy=multi-user.target

- name: Reload systemd for nvidia-caps
  ansible.builtin.command: systemctl daemon-reload
  when: nvidia_caps_systemd_unit.changed or nvidia_caps_script.changed

- name: Enable nvidia-setup-caps service
  ansible.builtin.systemd_service:
    name: nvidia-setup-caps
    enabled: true

- name: reboot after driver install
  reboot:
  when: install_driver.changed and not nvidia_driver_skip_reboot
